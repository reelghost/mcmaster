import requests

url = "https://api.brightdata.com/datasets/v3/trigger"

headers = {
	"Authorization": "Bearer e13c346e-b7d2-4fcc-9761-ffc28cfbff43",
	"Content-Type": "application/json",
}
params = {
	"dataset_id": "gd_l95fol7l1ru6rlo116",
	"include_errors": "true",
}
def skus_to_url_dicts(sku_list):
    """
    Convert a list of SKUs to a list of dicts with Walmart.ca URLs.
    """
    return [{"url": f"https://www.walmart.ca/en/ip/{sku}"} for sku in sku_list]

# List of SKUs (add or remove SKUs here as needed)
sku_list = [
    6000204260968,
6000204292757,
6000204292763,
6000204303234,
6000204308366,
6000204308372,
6000204308375,
6000204308381,
6000204308595,
6000204308601,
6000204308604,
6000204308968,
6000204308971,
6000204308977,
6000204308980,
6000204437013,
6000204437016,
6000204840204,
6000204947824,
6000204947860,
6000204948232,
6000204948422,
6000204948487,
6000204948577,
6000204960796,
6000204960875,
6000204960936,
6000204961052,
6000204961061,
6000204961144,
6000204961266,
6000204961608,
6000204961625,
6000204961673,
6000205037426,
6000205190819,
6000205191006,
6000205191108,
6000205191452,
6000205191799,
6000205192576,
6000205193131,
6000205233316,
6000205235318,
6000205381545,
6000205466249,
6000205497605,
6000205515394,
6000205516997,
6000205517747,
6000205518190,
6000205527737,
6000205527740,
6000205530657,
6000205530977,
6000205531299,
6000205531450,
6000205531475,
6000205532077,
6000205536873,
6000205536949,
6000205537193,
6000205537619,
6000205537868,
6000205537985,
6000205538695,
6000205653636,
6000205673170,
6000205682142,
6000205682271,
6000205682323,
6000205692908,
6000205693458,
6000205693516,
6000205693764,
6000205693906,
6000205694112,
6000205694176,
6000205694261,
6000205694517,
6000205694643,
6000205699629,
6000205700925,
6000205701535,
6000205701706,
6000205727680,
6000205730909,
6000205731002,
6000205731129,
6000205731279,
6000205731373,
6000205731424,
6000205731502,
6000205731609,
6000205731855,
6000205739729,
6000205740002,
6000205740738,
6000205741846,
6000205741952,
6000205742140,
6000205742250,
6000205742527,
6000205743640,
6000205744308,
6000205744733,
6000205745215,
6000205750070,
6000205790255,
6000205794052,
6000205794320,
6000205802962,
6000205804070,
6000205813475,
6000205828898,
6000205828937,
6000205858186,
6000205858267,
6000205858403,
6000205858992,
6000206322218,
6000206322979,
6000206324084,
6000206324288,
6000206324469,
6000206324943,
6000206325099,
6000206346973,
6000206348198,
6000206351946,
6000206371246,
6000206375482,
6000206375568,
6000206376641,
6000206377957,
6000206378347,
6000206378933,
6000206379411,
6000206383898,
6000206384151,
6000206384324,
6000206384348,
6000206386459,
6000206386664,
6000206387476,
6000206394162,
6000206411298,
6000206411509,
6000206411815,
6000206412684,
6000206412786,
6000206413034,
6000206604326,
6000206605851,
6000206953814,
6000206979994,
6000207075331,
6000207075594,
6000207075937,
6000207076016,
6000207087212,
6000207106759,
6000207106814,
6000207106990,
6000207107098,
6000207107535,
6000207107893,
6000207108028,
6000207108042,
6000207108157,
6000207108176,
6000207108179,
6000207108212,
6000207108334,
6000207108407,
6000207108722,
6000207153342,
6000207153638,
6000207153852,
6000207154048,
6000207154159,
6000207154705,
6000207154713,
6000207186453,
6000207187574,
6000207188165,
6000207188779,
6000207189820,
6000207203344,
6000207203693,
6000207204999,
6000207205634,
6000207219272,
6000207219642,
6000207219685,
6000207220449,
6000207223819,
6000207224181,
6000207224362,
6000207224953,
6000207235587,
6000207253275,
6000207253571,
6000207254014,
6000207287583,
6000207288155,
6000207288161,
6000207288244,
6000207288284,
6000207288287,
6000207288429,
6000207288575,
6000207315025,
6000207323445,
6000207323470,
6000207323574,
6000207323694,
6000207323734,
6000207323861,
6000207323864,
6000207323945,
6000207324002,
6000207324015,
6000207324184,
6000207324217,
6000207324345,
6000207324385,
6000207324575,
6000207324654,
6000207324748,
6000207324760,
6000207343095,
6000207343223,
6000207344175,
6000207372511,
6000207387661,
6000207387723,
6000207387918,
6000207388049,
6000207388232,
6000207390811,
6000207390840,
6000207391045,
6000207391188,
6000207391197,
6000207391206,
6000207391245,
6000207391310,
6000207391322,
6000207391448,
6000207391452,
6000207391498,
6000207391528,
6000207391531,
6000207391534,
6000207391537,
6000207391613,
6000207391637,
6000207391643,
6000207391687,
6000207391815,
6000207391852,
6000207391862,
6000207391874,
6000207391929,
6000207391940,
6000207391943,
6000207393610,
6000207393874,
6000207393952,
6000207425745,
6000207484674,
"61XLK7R498FC",
"62LCAUJPLVJ5",
"65GU71I0PYPU",
"6A4T2ZMEYGLL",
"6C3PS5C2M5T2",
"6CLX1QKZVI9Y",
"6EALIH0L852H",
"6FT0TRI3VZC0",
"6K1G9YKOKTMQ",
"6L3LHXQG1AP0",
"6P4SEUO1YLET",
"6SW3RSLZAUDG",
"6TVZMROEKEYB",
"6VWGJE7XEPS2",
"6WXCYBLZILKZ",
"6ZNNU7Q2F1TX",
"76Q7YA8A2QX1",
"78ASJEKUR72A",
"7C5IIA4FC9DJ",
"7HPU3V5829NO",
"7HS40HPBSOSL",
"872352",
"872355",
"872358",
"872418",
"872562",
"872616",
"872619",
"872622",
"872634",
"872637",
"872907",
"872910",
"872964",
"872967",
"873000",
"873003",
"873012",
"873018",
"873213",
"873291",
"873300",
"873312",
"873459",
"873673",
"874016",
"10030799",
"10031163",
"10031186",
"10031191",
"10031202",
"10031277",
"10031449",
"10031619",
"10031658",
"10031674",
"10031785",
"10031788",
"10031815",
"10032145",
"10032236",
"10032314",
"10032911",
"10032925",
"10032976",
"10049583",
"10049676",
"10049732",
"10053151",
"10054825",
"10059825",
"10066118",
"10134995",
"10140483",
"10141831",
"10148720",
"10153982",
"10156298",
"10168245",
"10169901",
"10183230",
"10184791",
"10184898",
"10188738",
"10188760",
"10188778",
"10188919",
"10188933",
"10188947",
"10189832",
"10191411",
"10192090",
"10192446",
"10193312",
"10193366",
"10193369",
"10195097",
"10195144",
"10195157",
"10199121",
"10199824",
"10223652",
"10223938",
"10224173",
"10224194",
"10260874",
"10260942",
"10261458",
"10298540",
"10298670",
"1062805",
"1MLEILVOU47K",
"1X68D3HKXYHK",
"1ZDD00OZKOU6",
"2KVXSFE65735",
"3QXNF813HPXY",
"5GY1AP3VWDOH",
"5HTPZBY834F6",
"5NONMHTZLQI0",
"5QUO60UP5RTS",
"5WKL6PULXA14"
]

data = {
    "input": skus_to_url_dicts(sku_list),
    "custom_output_fields": ["sku", "specifications"],
}

response = requests.post(url, headers=headers, params=params, json=data)
print(response.json())